# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on:
  push:
    branches: [main, master]  # 监听主分支的推送

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-publish: ${{ steps.check.outputs.should-publish }}
    steps:
      - uses: actions/checkout@v4
      - name: Check commit message for version
        id: check
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "Commit message: $COMMIT_MSG"
          
          # 检查提交信息是否匹配 v*.*.* 格式
          if [[ $COMMIT_MSG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "should-publish=true" >> $GITHUB_OUTPUT
            echo "Version commit detected: $COMMIT_MSG"
          else
            echo "should-publish=false" >> $GITHUB_OUTPUT
            echo "Not a version commit"
          fi

  build:
    needs: check-version
    if: needs.check-version.outputs.should-publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm build
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  test:
    needs: [check-version, build]
    if: needs.check-version.outputs.should-publish == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 22]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5
          
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - run: pnpm install --no-frozen-lockfile
      
      - name: Run tests
        run: pnpm test --if-present
        
      - name: Test import (Linux/macOS)
        if: runner.os != 'Windows'
        run: node -e "console.log('Testing import...'); require('./dist/index.js');"
        
      - name: Test import (Windows)
        if: runner.os == 'Windows'
        run: node -e "console.log('Testing import...'); require('./dist/index.js');"

  publish-npm:
    needs: [check-version, build, test]
    if: needs.check-version.outputs.should-publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.5
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
          cache: 'pnpm'
          
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
          
      - run: pnpm install --no-frozen-lockfile
          
      # - name: Update package.json version
      #   run: |
      #     COMMIT_MSG="${{ github.event.head_commit.message }}"
      #     VERSION=${COMMIT_MSG#v}
      #     npm version $VERSION --no-git-tag-version
          
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

